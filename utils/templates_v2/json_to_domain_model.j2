# =============================================================================
# MIT License
#
# Copyright (c) 2023, OpenCDMS
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# =============================================================================
from abc import ABC as AbstractBase
from dataclasses import dataclass
from datetime import datetime
from typing import NewType, Optional

Geography = NewType("Geography", str)

class DomainModelBase(AbstractBase):
    """
    Base class for OpenCDMS domain models.
    """

    def table_info(self) -> str:
        """Return table comment"""
        return self._comment

    def column_info(self, column: str) -> str:
        """Return column information"""
        return self._comments.get(column)


{% for schema in schemas %}
{%   for table in schema.tables %}
@dataclass
{% if table.name[-1] == "s" %}
{% set tn = table.name %}
{% else %}
{% set tn = table.name %}
{% endif %}
class {{tn.split("_") | map("title") | join("") }}(DomainModelBase):
{% for column in table.columns %}
{%    if column.foreign_key %}
{%        set suffix="_id"%}
{%    else%}
{%        set suffix=""%}
{%    endif%}
    {{column.name}}{{suffix}}: {% if column.nullable %}Optional[{%endif%}{{column.kind}}{% if column.nullable %}]{% endif %}{{ "" if not loop.last else "" }}
{%endfor %}
    __comments = {
{%     for column in table.columns %}
{%         if column.foreign_key %}{%set suffix="_id"%}{%else%}{%set suffix=""%}{%endif%}
        "{{column.name}}{{suffix}}": "{{column.comment}}"{{ "," if not loop.last else "" }}
{%     endfor %}
    }
    _comment = "{{table.comment}}"
{{space}}
{{space}}
{%   endfor %}
{% endfor %}